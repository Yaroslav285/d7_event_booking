<?php

function geolocation_styles_preprocess_geolocation_views_map(&$variables) {
  // Attaching styles for descriptions on map.
  drupal_add_css(drupal_get_path('module', 'geolocation_styles') . '/css/map_styles.css');
}

/**
 * Implements hook_preprocess_HOOK().
 */
function geolocation_styles_preprocess(&$variables, $hook) {
  if ($hook === 'entity' && isset($variables['events'])) {
    // Get Google API key from site configuration.
    $google_api_key = geolocation_googlemaps_admin_settings()['geolocation_googlemaps_api_key']['#default_value'];
    $google_query = file_get_contents('https://maps.googleapis.com/maps/api/geocode/json?latlng=' . $variables['content']['field_location']['#items'][0]['lat'] . ',' . $variables['content']['field_location']['#items'][0]['lng'] . '&key=' . $google_api_key);
    $encoded = json_decode($google_query);
    if ($encoded->status === 'OK') {
      $event_address = $encoded->results[0]->formatted_address;
    }
    else {
      $event_address = 'Address not recognised';
    }
    // Returns human-readable location string on event page.
    $variables["content"]["field_location"][0]["#markup"] = $event_address;
    $variables['content']['field_webform_book_event'][0]['#markup'] = '<a class="button ctools-use-modal ctools-modal-modal-popup-medium" href="/modal_forms/nojs/webform/6">Book event now</a>';
  }
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function geolocation_styles_form_webform_client_form_6_alter( &$form, &$form_state, $form_id ) {
 // Get referrer to get event_id.
 $referrer = $_SERVER["HTTP_REFERER"];
 if (stristr($referrer, 'events')) {
   $referrer_array = explode('/', $referrer);
   $event_id = array_pop($referrer_array);
   $form["submitted"]["selected_event"]["#default_value"] = $referrer;
   $form['#event_id'] = $event_id;
   $form['actions']['submit']['#submit'][] = 'book_event_now';
 }
}

/**
 * Custom form submit for booking events via modal form on event page.
 *
 * @param $form
 *    Form variables array.
 * @param $form_state
 *   Form state variables array.
 */
function book_event_now(&$form, &$form_state) {
  // Updating event places.
  $event = array_pop(entity_load('events', [0 => $form['#event_id']]));
  $event->field_places["und"][0]["value"] = $event->field_places["und"][0]["value"] - 1;
  entity_save('events', $event);

  // Load submission libraries.
  module_load_include('inc', 'webform', 'webform.module');
  module_load_include('inc', 'webform', 'includes/webform.submissions');
  $node = $form["#node"];

  // Preparing submission data array.
  $data = $form_state["values"]["submitted"];
  $data = _webform_client_form_submit_flatten($node, $data);
  $data = webform_submission_data($node, $data);
  // Preparing submission object.
  $submission = (object) array(
    'nid' => $node->nid,
    'uid' => $node->uid,
    'submitted' => REQUEST_TIME,
    'remote_addr' => ip_address(),
    'is_draft' => FALSE,
    'data' => $data,
  );

  // Saving submission.
  webform_submission_insert($node, $submission);
}